import streamlit as st
import sqlite3
import pandas as pd

# ------------------ –ß–¢–ï–ù–ò–ï –í–û–ü–†–û–°–û–í ------------------
@st.cache_data
def load_questions():
    df = pd.read_csv("questions.csv")
    return df

# ------------------ –°–û–ó–î–ê–ù–ò–ï –ë–ê–ó–´ ------------------
def init_db():
    conn = sqlite3.connect("results.db")
    cur = conn.cursor()
    cur.execute("""
    CREATE TABLE IF NOT EXISTS results (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        user TEXT,
        category TEXT,
        score INTEGER
    )
    """)
    conn.commit()
    conn.close()

def save_result(user, category, score):
    conn = sqlite3.connect("results.db")
    cur = conn.cursor()
    cur.execute("INSERT INTO results (user, category, score) VALUES (?, ?, ?)", 
                (user, category, score))
    conn.commit()
    conn.close()

# ------------------ –õ–û–ì–ò–ö–ê –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø ------------------
st.title("üéì –¢—Ä–µ–Ω–∞–∂—ë—Ä –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤")

init_db()
df = load_questions()

# –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
username = st.text_input("–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –∏–º—è:")

# –í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
categories = df["category"].unique().tolist()
category = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", categories)

# –§–∏–ª—å—Ç—Ä—É–µ–º –≤–æ–ø—Ä–æ—Å—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
q_list = df[df["category"] == category].to_dict("records")

# –°–æ—Å—Ç–æ—è–Ω–∏—è
if "index" not in st.session_state:
    st.session_state.index = 0
if "score" not in st.session_state:
    st.session_state.score = 0

# –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å
if st.session_state.index < len(q_list):
    q = q_list[st.session_state.index]
    st.subheader(f"–í–æ–ø—Ä–æ—Å {st.session_state.index + 1} –∏–∑ {len(q_list)}")
    st.write(q["question"])
    
    options = [q["option1"], q["option2"], q["option3"], q["option4"]]
    choice = st.radio("–í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–≤–µ—Ç:", options)

    if st.button("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å"):
        if choice == q["answer"]:
            st.success("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ!")
            st.session_state.score += 1
        else:
            st.error(f"‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –í–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç: {q['answer']}")

    if st.button("–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å"):
        st.session_state.index += 1
else:
    st.info(f"–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à—ë–Ω! –í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {st.session_state.score} –∏–∑ {len(q_list)}")
    if username:
        save_result(username, category, st.session_state.score)
        st.success("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!")
    # –°–±—Ä–æ—Å –¥–ª—è –Ω–æ–≤–æ–π –ø–æ–ø—ã—Ç–∫–∏
    st.session_state.index = 0
    st.session_state.score = 0

# ------------------ –ü–û–ö–ê–ó –°–¢–ê–¢–ò–°–¢–ò–ö–ò ------------------
st.markdown("---")
if st.checkbox("üìä –ü–æ–∫–∞–∑–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"):
    conn = sqlite3.connect("results.db")
    df_results = pd.read_sql("SELECT * FROM results", conn)
    st.dataframe(df_results)
    conn.close()
